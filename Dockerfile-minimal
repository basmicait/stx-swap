# Install dependencies only when needed
# FROM node:14-alpine AS deps
# RUN apk add --no-cache libc6-compat git
# WORKDIR /app
# COPY package.json yarn.lock ./
# COPY ./src /app/src
# COPY . .
# RUN ls /app
# RUN ls /app/src/config/abi
# RUN yarn install --frozen-lockfile

# Rebuild the source code only when needed
FROM node:14-alpine AS builder
RUN apk add --no-cache libc6-compat git
WORKDIR /app
COPY . .
#COPY --from=deps /app/node_modules ./node_modules
#COPY --from=deps /app/src ./src

ENV NEXT_TELEMETRY_DISABLED 1
RUN yarn install --frozen-lockfile
RUN yarn build

# Production image, copy all the files and run next
FROM node:14-alpine AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json

# Automatically leverage output traces to reduce image size 
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["node", "server.js"]
